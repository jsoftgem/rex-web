angular.module("regionManager",["fluid","ngResource","datatables","ngCookies","flowServices"]).controller("regionManagerCtrl",["$scope","DTOptionsBuilder","DTColumnBuilder","flowMessageService","flowModalService","$compile","$filter","$cookies","userProfile","imageService",function(s,dto,dtc,ms,fm,c,f,co,up,is){s.task.home_page="region_manager_home",s.task.home_url="services/war/agent_light_query/find_managed_agents?manager=",s.task.view_top_url="services/war/customer_tag_query/by_assigned_agents?agentId=",s.task.rsm={},s.imageService=is,s.flow.onRefreshed=function(){s.task.page.name===s.task.home_page&&s.task.refresh()},s.openTagEditor=function(agent){agent.viewTop=!1,s.task.tagEditorAgent=agent,s.flow.action("post",void 0,agent.id)},s.closeTagEditor=function(){fm.hide(s.flow.getElementFlowId("tagEditorModal"))},s.checkIfAdded=function(customer){var $customer={valid:!0};return angular.forEach(s.task.tagEditorAgent.topCustomers,function(cust,index){cust.customerId===customer.id&&(this.valid=!1)},$customer),$customer.valid},s.swap=function($index,$next){console.info("swap",$index+" - "+$next);var t=s.task.tagEditorAgent.topCustomers[$index],nextIndex=$index+1,sourceIndex=$next+1;s.task.tagEditorAgent.topCustomers[$next].index=nextIndex,t.index=sourceIndex,s.task.tagEditorAgent.topCustomers[$index]=s.task.tagEditorAgent.topCustomers[$next],s.task.tagEditorAgent.topCustomers[$index].toBeUpdated=!0,s.task.tagEditorAgent.topCustomers[$next]=t,s.task.tagEditorAgent.topCustomers[$next].toBeUpdated=!0},s.saveTopSchool=function(agent){var topCustomers=agent.topCustomers;topCustomers&&s.flow.action("put",topCustomers,agent.id)},s.removeTopSchool=function($index,agent){$index<agent.topCustomers.length&&agent.topCustomers.splice($index,1),$index<agent.topCustomers.length&&angular.forEach(agent.topCustomers,function($agent,$index){$agent.index=$index+1,$agent.toBeRemoved=!0,console.info("cascading changes",$agent)})},s.viewTopSchools=function(agent){agent.viewTop?agent.viewTop=!1:(agent.loading=!0,s.http.post(s.task.view_top_url,void 0,agent.id).success(function(data){agent.topCustomers=data}).then(function(){agent.viewTop=!0,agent.loading=!1}))},s.addToTop=function(customer){var $customer={valid:!0};if(angular.forEach(s.task.tagEditorAgent.topCustomers,function(cust,index){cust.customerId===customer.id&&(this.valid=!1)},$customer),$customer.valid){var customerTag={};customerTag.agentId=s.task.tagEditorAgent.id,customerTag.customerId=customer.id,customerTag.regionCode=s.task.tagEditorAgent.region,customerTag.marketDescription=customer.marketDetail,customerTag.customerName=customer.school.name,s.task.tagEditorAgent.topCustomers.push(customerTag),customerTag.index=s.task.tagEditorAgent.topCustomers.length,angular.forEach(s.task.tagEditorAgent.topCustomers,function($agent,$index){$agent.index=$index+1,$agent.toBeUpdated=!0,console.info("cascading changes",$agent)})}},s.$on(s.flow.event.getSuccessEventId(),function(event,data,method){"post"===method?(s.task.tagEditorAgent.customers=data,s.http.post(s.task.view_top_url,void 0,s.task.tagEditorAgent.id).success(function(data){s.task.tagEditorAgent.topCustomers=data}).then(function(){fm.show(s.flow.getElementFlowId("tagEditorModal"))})):"put"===method&&fm.hide(s.flow.getElementFlowId("tagEditorModal"))}),s.task.refresh=function(){s.task.origin?s.task.origin.region&&(s.task.loading=!0,s.http.post("services/war/agent_query/find_manager_by_region/",void 0,s.task.origin.region.regionCode).success(function(manager){console.debug("manager-region",manager),manager?s.http.get(s.task.home_url,manager.id).success(function(rsm){s.task.rsm=rsm,s.task.title=s.task.rsm.region.regionName,s.task.page.title=s.task.rsm.manager.fullName}).then(function(){s.task.loading=!1},function(){s.task.loading=!1}):s.task.loading=!1}).then(function(){s.task.loading=!1},function(){s.task.loading=!1})):s.http.get(s.task.home_url,up.agent.id).success(function(rsm){s.task.rsm=rsm,s.task.title=s.task.rsm.region.regionName,s.task.page.title=s.task.rsm.manager.fullName})},s.task.page.load=function(){this.name===s.task.home_page&&s.task.refresh()}}]);